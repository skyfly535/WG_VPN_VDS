---
- name: Deploy WireGuard Server
  hosts: wireguard_servers
  become: yes
  tasks:

    - name: Ensure the system is updated
      apt:
        update_cache: yes
        upgrade: dist

    - name: Get kernel version
      command: uname -r
      register: kernel_version

    - name: Install WireGuard and required packages
      apt:
        name:
          - wireguard
          - wireguard-tools
          - qrencode
          - "linux-headers-{{ kernel_version.stdout }}"
          - dkms
          - mc
        state: present

    - name: Enable IP forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        reload: yes

    - name: Ensure net.ipv4.ip_forward is enabled on boot
      lineinfile:
        path: /etc/sysctl.conf
        regexp: '^#?net.ipv4.ip_forward='
        line: 'net.ipv4.ip_forward=1'
        state: present

    - name: Create WireGuard configuration directory
      file:
        path: /etc/wireguard
        state: directory
        mode: '0700'

    - name: Generate server private key
      command: wg genkey
      register: server_private_key
      changed_when: false  # Всегда выполняется, но не меняет состояние системы

    - name: Generate server public key
      shell: "echo '{{ server_private_key.stdout }}' | wg pubkey"
      register: server_public_key
      changed_when: false

    # - name: Generate pre-shared key
    #   command: wg genpsk
    #   register: psk

    - name: Save server public key
      copy:
        content: "{{ server_public_key.stdout }}"
        dest: /etc/wireguard/publickey
        mode: '0644'
        owner: root
        group: root  

    - name: Retrieve network interface with public IP using Ansible facts
      set_fact:
        interface_output: "{{ ansible_default_ipv4.interface }}"

    - name: Debug interface_output
      debug:
        msg: "interface_output is {{ interface_output }}"
      
    - name: Create WireGuard server config
      template:
        src: wg0.conf.j2
        dest: /etc/wireguard/wg0.conf
        mode: '0600'

    - name: Copy client management script
      copy:
        src: add_wireguard_client_new.sh
        dest: /etc/wireguard/add_wireguard_client_new.sh
        mode: '0755'  # Делаем исполняемым
        owner: root
        group: root    

    - name: Check if WireGuard interface exists
      command: ip link show wg0
      register: wg_interface_check
      ignore_errors: yes
      changed_when: false

    - name: Stop WireGuard interface if exists
      command: wg-quick down wg0
      when: wg_interface_check.rc == 0

    - name: Enable and start WireGuard service
      systemd:
        name: wg-quick@wg0
        enabled: yes
        state: restarted  # Используем restarted вместо started
      async: 45  # Даем время на запуск
      poll: 5

    - name: Verify WireGuard status
      command: wg show
      register: wg_status
      changed_when: false

    - name: Debug WireGuard status
      debug:
        var: wg_status.stdout

### Templates

#### `wg0.conf.j2`


